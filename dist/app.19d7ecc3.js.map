{"version":3,"sources":["webpack:///./src/img/banner-right.png","webpack:///./src/img/drop-up.png","webpack:///./src/img/drops.png","webpack:///./src/events.js","webpack:///./src/pages/index.js","webpack:///./src/components/chat/PersonalChatInfoCard.js","webpack:///./src/components/chat/ChatList.js","webpack:///./src/components/UserCard.js","webpack:///./src/components/FindForkersList.js","webpack:///./src/components/ProjectCard.js","webpack:///./src/components/Loader.js","webpack:///./src/components/UserProfile.js","webpack:///./src/components/chat/ChatHeader.js","webpack:///./src/components/chat/MessageContainer.js","webpack:///./src/components/chat/MessageInput.js","webpack:///./src/components/Errors/UserNotRegistered.js","webpack:///./src/components/chat/PersonalChatContainer.js","webpack:///./src/pages/Dashboard.js","webpack:///./src/components/HOC/loginVerification.js","webpack:///./src/App.js","webpack:///./src/index.js","webpack:///./src/img/FORKERS.png","webpack:///./src/serviceWorker.js"],"names":["module","exports","__webpack_require__","p","CREATE_CHAT","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","SEND_TYPING","VERIFY_USER","PRIVATE_MESSAGE","LOGOUT","react_default","a","createElement","className","href","IndexPage","login","fetch","credentials","then","res","json","console","log","render","tilt_default","options","max","perspective","src","require","alt","pages_ref","pages_ref2","Component","query","gql","_templateObject","PersonalChatInfoCard","data","this","props","loading","PersonalChatInfoCard_ref","react_router_dom","to","chatName","search_one","avatar_url","graphql","variables","username","placeholder","type","ChatList","getRecieverName","currentUser","arguments","length","undefined","filter","user","_this2","_props","chatHistory","ChatList_ref","ChatList_ref2","ChatList_ref3","_ref4","map","chat","chat_PersonalChatInfoCard","users","UserCard","image","searchQuery","FindForkersList_templateObject","FindForkerList","state","renderCards","_this","FindForkersList_ref","components_UserCard","score","findForkers","forker_search","client","search","setState","FindForkersList_ref4","onChange","e","target","value","withApollo","ProjectCard","gradientGenerator","gradients","Math","floor","random","name","language","forks","stars","issues","ProjectCard_ref","ProjectCard_ref2","ProjectCard_ref3","Loader","Loader_ref","UserProfile_templateObject","UserProfile","renderProjects","repos","element","components_ProjectCard","stargazers_count","open_issues","UserProfile_ref","_props$data$search_on","followers","following","public_repos","bio","UserProfile_ref2","UserProfile_ref3","UserProfile_ref4","_ref5","_ref6","id","class","ChatHeader","_ref","ChatHeader_ref2","MessageContainer","MessageContainer_classCallCheck","MessageContainer_possibleConstructorReturn","_Component","call","maxheight","typingUsers","componentDidMount","el","scrollTop","scrollHeight","componentDidUpdate","socket","chatId","on","sender","_this3","_props2","messages","ref","onScroll","someData","message","react_markdown_default","source","skipHtml","time","MessageInput","messageInput","onSubmitHandler","preventDefault","_this$props","reciever","emit","sendTyping","_this$props2","onSubmit","required","onInput","MessageInput_ref","UserNotRegistered","invitationSent","sendInvition","email","react","onClick","PersonalChatContainer_templateObject","PersonalChatContainer","prevProps","prevState","setPreviousMessages","isGitforkerUser","PersonalChatContainer_ref","MessageContainer_MessageContainer","MessageInput_MessageInput","UserNotRegistered_UserNotRegistered","PersonalChatContainer_ref2","react_router","path","component","Dashboard","activeChat","currentChatMessages","setUser","initSocket","io","newMessage","oldMessages","addChat","lastMessage","oldChatHistory","concat","componentWillMount","Dashboard_ref2","chat_ChatList","Dashboard_ref3","chat_PersonalChatContainer","match","params","components_UserProfile","loginVerification_templateObject","loginVerification","WrappedComponent","requireAuth","loginVerification_classCallCheck","loginVerification_possibleConstructorReturn","apply","loginVerification_inherits","prototype","componentWillUpdate","nextProps","history","push","loginVerification_ref","withRouter","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","exact","App","react_apollo_esm","App_ref","LoginVerification","ReactDOM","src_App_0","document","getElementById","serviceWorker","process","d","__webpack_exports__","unregister","Boolean","window","location","hostname","navigator","ready","registration"],"mappings":"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","file":"app.19d7ecc3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"banner-right.66718e15.png\";","module.exports = __webpack_public_path__ + \"drop-up.7445fe2e.png\";","module.exports = __webpack_public_path__ + \"drops.0c70a231.png\";","module.exports = {\r\n    CREATE_CHAT:\"CREATE_CHAT\",\r\n    COMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n    USER_CONNECTED:\"USER_CONNECTED\",\r\n    MESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n    MESSAGE_SENT:\"MESSAGE_SENT\",\r\n    USER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n    TYPING:\"TYPING\",\r\n    SEND_TYPING:\"SEND_TYPING\",\r\n    VERIFY_USER:\"VERIFY_USER\",\r\n    PRIVATE_MESSAGE:\"PRIVATE_MESSAGE\",\r\n    LOGOUT:\"LOGOUT\",\r\n}","import React,{Component} from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport {Link} from 'react-router-dom'\r\n \r\nclass IndexPage extends Component{\r\n\r\n    login = () =>{\r\n        fetch('/auth/github/',{credentials:'same-origin'})\r\n        .then((res)=>{\r\n            return res.json()\r\n        }).then(res=>{\r\n            console.log(res)\r\n        })\r\n    }\r\n    render = () =>(\r\n    <div className=\"index-page u-display-flex \">\r\n        <div className=\"index-page__left u-display-flex u-justify-content-center u-align-items-center \">\r\n        <Tilt className=\"Tilt u-display-flex u-justify-content-center u-align-items-center\" options={{ max : 25 , perspective:1000}} >\r\n                   <img src={require('../img/banner-right.png')} alt=\"gitforker bannar\"/>\r\n        </Tilt>\r\n \r\n        </div>\r\n        <div className=\"index-page__right flex-fill u-display-flex u-flex-column\">\r\n        \r\n        <div className=\" icon-container u-display-flex u-justify-content-space-between\">\r\n        <Tilt className=\"Tilt\" options={{ max : 25 , perspective:100}} >\r\n         \r\n            <img className=\"drop-icon\" src={require('../img/FORKERS.png')}/>\r\n            </Tilt>\r\n        <Tilt className=\"Tilt\" options={{ max : 25 , perspective:100}} >\r\n         \r\n            <img className=\"drop-icon\" src={require('../img/drop-up.png')}/>\r\n            </Tilt>\r\n        \r\n        \r\n        </div> \r\n        <div className=\"index-page__content flex-fill u-display-flex u-flex-column u-justify-content-center u-align-items-end\" >\r\n        <h1 className=\"index-page__header\">Let's get connected with the people's who loves to code</h1>\r\n        <Tilt className=\"Tilt\" options={{ max : 25 , perspective:100}} >\r\n        <a href=\"/auth/github/\"><button className=\"index-page__btn \">Login With Github</button></a>\r\n        </Tilt>\r\n        </div>\r\n        <div className=\"icon-container u-display-flex u-justify-content-space-between u-align-items-baseline\">\r\n        <Tilt className=\"Tilt\" options={{ max : 25 , perspective:100}} >\r\n            \r\n            <img className=\"drop-icon\" src={require('../img/drops.png')}/>\r\n            </Tilt>\r\n            <Tilt className=\"Tilt\" options={{ max : 25 , perspective:100}} >\r\n         \r\n            <img className=\"text-logo\" src={require('../img/FORKERS.png')}/>\r\n          \r\n            </Tilt>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default IndexPage","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport gql from 'graphql-tag';\r\nimport {graphql,withApollo} from 'react-apollo';\r\n\r\nconst query = gql`\r\nquery Search($username:String!){\r\n\tsearch_one(username:$username){\r\n    avatar_url\r\n  }\r\n}\r\n`;\r\nclass PersonalChatInfoCard extends Component{\r\n   \r\n    render(){\r\n        const { data } = this.props;   \r\n      \r\n        if(!data.loading ){\r\n           \r\n        \r\n        return(\r\n            <Link to={`/dashboard/${this.props.chatName}`}>\r\n            <div className=\"user-card u-display-flex u-justify-content-space-evenly u-align-items-center\">\r\n                <div className=\"user-card__image \">\r\n                    <img src={data.search_one.avatar_url} alt=\"user pic\"/>\r\n                </div>\r\n                <div className=\"user-card__details flex-fill u-text-left\">\r\n                    <h3>{this.props.chatName}</h3>\r\n                   \r\n                </div>\r\n                <div className=\"user-card__current-status u-display-flex u-justify-content-center u-align-items-center u-flex-column flex-fill\">\r\n                    {/* <div className=\"user-card__online\">\r\n                    </div>\r\n                    <div className=\"user-card__msg u-display-flex u-justify-content-center u-align-items-center\">\r\n                        9+\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            </Link>\r\n        )\r\n        }else{\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default  graphql(query,{\r\n    options:(props)=> {return { variables: {username : props.chatName}}}\r\n })(PersonalChatInfoCard);","import React,{Component} from 'react';\r\nimport PersonalChatInfoCard from './PersonalChatInfoCard';\r\nclass ChatList extends Component{\r\n    getRecieverName = (currentUser,users = [])=>{\r\n       const reciever = users.filter((user)=>user !== currentUser)\r\n       return reciever[0];\r\n    }\r\n    render(){\r\n    const {chatHistory,user} = this.props;\r\n\r\n        return(\r\n            <div className=\"list \">\r\n                <h2 className=\"dashboard__header\">CHAT</h2>\r\n                <input className=\"list__search\" placeholder=\"Search...\" type=\"text\"/>\r\n                {\r\n                    (chatHistory.length === 0)?\r\n                    <div className=\"empty\">\r\n                    Find Any Forker to start the chat\r\n                    </div>:<div></div>\r\n                }\r\n                \r\n                <ul className=\"list__content\"> \r\n                {\r\n                   chatHistory.map((chat)=>{\r\n                     return <PersonalChatInfoCard chatName={this.getRecieverName(user,chat.users)}/>\r\n                   })\r\n                \r\n                }\r\n                </ul>\r\n                {/*\r\n                   \r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n                    <li><UserCard/></li>\r\n\r\n                    \r\n                < */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatList","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass UserCard extends Component{\r\n    render(){\r\n        \r\n        return(\r\n            <Link to={`/find_forker/${this.props.username}`}>\r\n            <div className=\"user-card u-display-flex u-justify-content-space-evenly u-align-items-center\">\r\n                <div className=\"user-card__image \">\r\n                    <img src={this.props.image} alt=\"user pic\"/>\r\n                </div>\r\n                <div className=\"user-card__details flex-fill u-text-left\">\r\n                    <h3>{this.props.username}</h3>\r\n                   \r\n                </div>\r\n                <div className=\"user-card__current-status u-display-flex u-justify-content-center u-align-items-center u-flex-column flex-fill\">\r\n                    {/* <div className=\"user-card__online\">\r\n                    </div>\r\n                    <div className=\"user-card__msg u-display-flex u-justify-content-center u-align-items-center\">\r\n                        9+\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React,{Component} from 'react';\r\nimport UserCard from './UserCard';\r\nimport gql from 'graphql-tag'\r\nimport {graphql,withApollo} from 'react-apollo';\r\nimport { ApolloConsumer } from 'react-apollo';\r\n\r\nconst searchQuery = gql`\r\nquery Search($username:String!){\r\n\tsearch(username:$username){\r\n    login\r\n    avatar_url\r\n     score\r\n  }\r\n}`\r\nclass FindForkerList extends Component{\r\n    state={\r\n        data : []\r\n    }\r\n    async findForkers(forker_search){\r\n       const {data} = await this.props.client.query({\r\n                    query: searchQuery,\r\n                    variables: { username:forker_search }\r\n            \r\n                    })\r\n                    console.log(data.search)\r\n                   this.setState({\r\n                       data:data.search \r\n                   })\r\n            }\r\n            \r\n\r\n    renderCards = () =>{\r\n        if(this.state.data.length === 0){\r\n            return(\r\n                <div className=\"empty\">\r\n                   Enter name of any forker you know\r\n                </div>\r\n            )\r\n        }else{\r\n            \r\n           return this.state.data.map((user)=>{\r\n                return <UserCard username={user.login} image={user.avatar_url} score={user.score}/>;\r\n                \r\n            })\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        \r\n            <div className=\"list \">\r\n                <h2 className=\"dashboard__header\">FIND FORKERS</h2>\r\n\r\n                <input className=\"list__search\" onChange={(e) =>this.findForkers(e.target.value)} placeholder=\"Search...\" type=\"text\"/>\r\n               \r\n                <ul className=\"list__content\">\r\n                    {this.renderCards()}\r\n                    \r\n                </ul> \r\n            </div>\r\n   \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withApollo(FindForkerList);","import React,{Component} from 'react';\r\n// import { fork } from 'child_process';\r\n\r\nclass ProjectCard extends Component{\r\n    gradientGenerator(){\r\n        const gradients = [\r\n            'bluish-gradient',\r\n            'redish-gradient',\r\n            'greenish-gradient',\r\n         \r\n        ]\r\n        var min=0; \r\n        var max=gradients.length;  \r\n        var random = Math.floor(Math.random() * (+max - +min) + +min);\r\n        return gradients[random];\r\n    }\r\n    render(){\r\n        const {name,language,forks,stars,issues} = this.props;\r\n        return(\r\n            <div className={`project-card ${this.gradientGenerator()}`}>\r\n            <div className=\"project-card__content\">\r\n                <h2 className=\"project-card__heading\">{name}</h2>\r\n                <p className=\"project-card__language\">{`${language} `}</p>\r\n            </div>\r\n            <div className=\"project-card__points\">\r\n                <div className=\"project-card__points__card\">\r\n                    <p className=\"project-card__points__data\">{forks}</p>\r\n                    <p className=\"project-card__points__data\">Forks</p>\r\n                </div>\r\n                <div className=\"project-card__points__card\">\r\n                    <p className=\"project-card__points__data\">{stars}</p>\r\n                    <p className=\"project-card__points__data\">Stars</p>\r\n                </div>\r\n                <div className=\"project-card__points__card\">\r\n                    <p className=\"project-card__points__data\">{issues}</p>\r\n                    <p className=\"project-card__points__data\">issues</p>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\n\r\nexport default () =>(\r\n    <div className=\"user-profile u-display-flex u-justify-content-space-evenly u-align-items-center\">\r\n                <span className=\"loader\">Loading...</span>\r\n            </div>\r\n)","import React,{Component} from 'react';\r\nimport ProjectCard from './ProjectCard';\r\nimport {graphql,withApollo} from 'react-apollo';\r\nimport Loader from './Loader';\r\nimport gql from 'graphql-tag'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst query = gql`\r\nquery Search($username:String!){\r\n\tsearch_one(username:$username){\r\n    login\r\n    avatar_url\r\n    bio\r\n    followers\r\n    following\r\n    public_repos\r\n    repos{\r\n      name\r\n      language\r\n      forks\r\n      stargazers_count\r\n      open_issues\r\n    }\r\n    \r\n  }\r\n}\r\n\r\n`;\r\n\r\nclass UserProfile extends Component{\r\n    renderProjects(repos){\r\n        console.log(\"true\")\r\n       return repos.map((element)=>{\r\n          return  <ProjectCard\r\n                    name={element.name}\r\n                    language={element.language}\r\n                    forks={element.forks}\r\n                    stars={element.stargazers_count}\r\n                    issues={element.open_issues}\r\n          />\r\n        })\r\n    }\r\n    render(){\r\n        console.log(this.props);\r\n\r\n        if(this.props.data.loading){\r\n            return <Loader/>\r\n        }\r\n        const {login,avatar_url,followers,following,public_repos,bio,repos} = this.props.data.search_one;\r\n        return(\r\n           \r\n            <div className=\"user-profile u-display-flex\">\r\n                <div className=\"user-profile__left\">\r\n                    <div>\r\n                    <div>\r\n                        <img className=\"profile-pic--lg\" src={avatar_url} alt=\"gitforker dp\"/>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"user-profile__details\">\r\n                        <h2>{login}</h2>\r\n                        <p>{bio}</p>\r\n                    </div>\r\n                    <div className=\"user-profile__btns\">\r\n                        <p>\r\n                        <button className=\"btn__green\">Hireable</button>\r\n                        </p>\r\n                        <p>\r\n                        <Link to={`/dashboard/${login}`}><button className=\"btn__purple\">Let's talk</button></Link>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"user-profile__right  flex-fill\">\r\n                    <div className=\"user-profile__social u-display-flex u-justify-content-space-around\">    \r\n                        <div className=\"user-profile__social__cards\">\r\n                            <p>{followers}</p>\r\n                            <p>Followers</p>\r\n                        </div>\r\n                        <div className=\"user-profile__social__cards\">\r\n                            <p>{public_repos}</p>\r\n                            <p>Repos</p>\r\n                        </div>\r\n                        <div className=\"user-profile__social__cards\">\r\n                            <p>{following}</p>\r\n                            <p>Following</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"user-profile__project-cards__container\">\r\n                    {this.renderProjects(repos)}\r\n                  \r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default graphql(query,{\r\n    options:(props)=> {return { variables: {username : props.id}}}\r\n })(UserProfile);","import React, { Component } from 'react';\r\n\r\n\r\nexport default ({chatName,image}) => {\r\n       \r\n        return(\r\n            <div class=\"chat-header\">\r\n                    <div className=\"user-card__image \">\r\n                        <img  src={image} alt=\"gitforker dp\"/>    \r\n                    </div>\r\n                    <div className=\"chat-header__name\">\r\n                    {chatName}\r\n                    </div>\r\n                    <div className=\"chat-header__options\">\r\n                    <i class=\"fas fa-paperclip\"></i>\r\n                    <i class=\"fas fa-paperclip\"></i>                   \r\n                    <i class=\"fas fa-paperclip\"></i>\r\n                    </div>\r\n               </div>\r\n        )\r\n    \r\n}","import React,{Component} from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport { TYPING } from '../../events';\r\n\r\nexport default class MessageContainer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            maxheight : 0,\r\n            typingUsers : []\r\n        }\r\n    }\r\n    \r\n    // el = \"\"\r\n    componentDidMount() {\r\n    \r\n        this.el.scrollTop = this.el.scrollHeight\r\n        this.setState({maxheight:this.el.scrollHeight})\r\n      }\r\n    \r\n      componentDidUpdate() {\r\n        \r\n      \r\n        if( this.el.scrollTop === this.state.maxheight){\r\n            this.el.scrollTop = this.el.scrollHeight\r\n        }\r\n    if(this.props.socket && this.props.chat.chatId ){\r\n        \r\n\r\n        const {socket,chat} = this.props\r\n        socket.on(`${TYPING}-${chat.chatId}`,(sender)=>{\r\n            const typingUsers = this.state.typingUsers\r\n            console.log(sender , typingUsers)\r\n            if(!(sender in typingUsers)){\r\n            this.setState({typingUsers:[...typingUsers,sender]})\r\n            }\r\n        })\r\n      }else{\r\n          console.log(this.props)\r\n\r\n      }\r\n    }\r\n    \r\n    render(){\r\n        const {messages,sender} = this.props;\r\n       const { typingUsers } = this.state\r\n        return (\r\n            <div id=\"message-container\" ref={el => { this.el = el; }} onScroll={()=>this.setState({someData:\"90\"})} className={`message-container `}  >\r\n                { \r\n                    messages.map((message)=>{\r\n                    return( <div className={`${(message.sender===sender)?\"right\":\"\"} message-container__message-box`}>\r\n                                <div className=\"message-container__message-content\">\r\n                                    <div className=\"message-container__message\"> <ReactMarkdown\r\n                                    className=\"markdown-body\"\r\n                                     source={message.message}\r\n                                     skipHtml={true}\r\n                                     /> </div>\r\n                                    \r\n                                </div> \r\n                                <p className=\"message-container__time\">{message.time}</p> \r\n                            </div>)\r\n                    })\r\n                }\r\n                {\r\n                    typingUsers.map((user)=><div>{`${user} is typing...`}</div>)\r\n                }\r\n          \r\n             \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react'\r\nimport { MESSAGE_SENT,SEND_TYPING } from '../../events';\r\nexport default class MessageInput extends Component{\r\n    state = {\r\n        messageInput:\"\"\r\n    }\r\n    onSubmitHandler= (e) =>{\r\n        e.preventDefault();\r\n        const { socket,sender,chatId,reciever } = this.props\r\n        const { messageInput } = this.state\r\n        console.log(this.state.messageInput) \r\n        socket.emit(MESSAGE_SENT,chatId,sender,messageInput)\r\n        this.setState({messageInput:\"\"})\r\n    }\r\n    sendTyping = () =>{\r\n        console.log(\"calling\")\r\n        const { socket,sender,reciever,chatId } = this.props\r\n        socket.emit(SEND_TYPING,sender,reciever,chatId)\r\n    }\r\n    render(){\r\n        return ( \r\n            <form onSubmit={(e)=>this.onSubmitHandler(e)} className=\"message-input\">\r\n                <textarea\r\n                 placeholder=\"Type Your Message Here.\"\r\n                 onChange={(e)=>this.setState({messageInput:e.target.value})} \r\n                 value={this.state.messageInput}\r\n                 className=\"message-input__textarea\"\r\n                 required\r\n                 onInput={this.sendTyping}\r\n                 />\r\n                <button type=\"submit\" className=\"message-input__btn\"><i class=\"fas fa-paper-plane\"></i></button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React,{Component,Fragment} from 'react';\r\n\r\nexport default class UserNotRegistered extends Component{\r\n\r\n    state = {\r\n        invitationSent : false\r\n    }\r\n\r\n    sendInvition = () =>{\r\n        fetch(`/api/send_invitation/${this.props.username}/${this.props.email}`)\r\n        .then((res)=>{\r\n            return res.json()\r\n        })\r\n        .then((res)=>{\r\n            this.setState({ invitationSent : true})\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        const { invitationSent } = this.state\r\n        return (\r\n            <div className=\"non-registered-user\">\r\n                {\r\n                    (!invitationSent)?(\r\n                        <Fragment>\r\n                        <p className=\"non-registered-user__message\">Invite {this.props.username} to create there account on GitForker.</p>\r\n                        <div><button onClick={this.sendInvition} className=\"non-registered-user__invite-btn\">SEND INVITAION</button></div>\r\n                        </Fragment>\r\n                    ):(\r\n                    <p className=\"non-registered-user__message\">You Have Successfully Invited {this.props.username}. </p>\r\n                    )\r\n                }\r\n               \r\n               \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","import React,{Component} from 'react';\r\nimport ChatHeader from './ChatHeader';\r\nimport MessageContainer from './MessageContainer'\r\nimport MessageInput from './MessageInput';\r\nimport gql from 'graphql-tag';\r\nimport {graphql,withApollo} from 'react-apollo';\r\nimport Loader from '../Loader';\r\nimport {CREATE_CHAT} from '../../events';\r\nimport UserNotRegistered from '../Errors/UserNotRegistered';\r\n\r\nconst query = gql`\r\nquery Search($username:String!){\r\n\tsearch_one(username:$username){\r\n    login\r\n    avatar_url\r\n    bio   \r\n    email\r\n    isGitforkerUser\r\n  }\r\n}\r\n`;\r\n\r\n\r\n class PersonalChatContainer extends Component{\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        const { socket,user,data,setPreviousMessages } = this.props;   \r\n      \r\n        if(!data.loading && data.search_one && data.search_one.isGitforkerUser && prevProps.data !== this.props.data){\r\n        \r\n            socket.emit(CREATE_CHAT,user,data.search_one.login,setPreviousMessages);\r\n\r\n        }\r\n    } \r\n  \r\n    render(){\r\n        const { socket,user,data,chat,messages } = this.props; \r\n       \r\n        if(data.loading){\r\n            return <Loader/>\r\n        }\r\n        else if(!data.search_one){\r\n            return <div>User Not EXIST</div> \r\n        }\r\n        else if(!data.search_one.isGitforkerUser){\r\n           \r\n            return <UserNotRegistered username={data.search_one.login} email={data.search_one.email}/>\r\n        }\r\n        else{\r\n        return(\r\n            <div className=\"chat-container\">\r\n               <ChatHeader chatName={data.search_one.login} image={data.search_one.avatar_url}/>\r\n                <MessageContainer sender={user} messages={messages} chat={chat} socket={socket}/>\r\n                <MessageInput socket={socket} chatId={chat.chatId} sender={user} reciever={data.search_one.login} />\r\n            </div>\r\n        )\r\n        }\r\n    \r\n}\r\n}\r\n\r\n\r\nexport default graphql(query,{\r\n    options:(props)=> {return { variables: {username : props.reciever}}}\r\n })(PersonalChatContainer);","import React,{Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom'\r\nimport ChatList from '../components/chat/ChatList';\r\nimport FindForkerList from '../components/FindForkersList';\r\nimport UserProfile from '../components/UserProfile';\r\nimport PersonalChatContainer from '../components/chat/PersonalChatContainer';\r\nimport io from 'socket.io-client';\r\nimport {USER_CONNECTED,MESSAGE_RECIEVED,MESSAGE_SENT} from '../events'\r\nconst socketUrl = \"http://localhost:4000\";\r\n\r\nclass Dashboard  extends Component{\r\n\r\n\r\n    state = {\r\n        socket : null,\r\n        user : null,\r\n        chatHistory:[],\r\n        activeChat:{},\r\n        currentChatMessages:[]\r\n    }\r\n    componentWillMount(){\r\n       \r\n        this.initSocket()\r\n        \r\n    }\r\n\r\n\r\n    setUser = (user,chatHistory=[]) =>{ \r\n        this.setState({user,chatHistory});\r\n    }\r\n    initSocket = () =>{\r\n        const { data } = this.props;\r\n        const socket = io()\r\n        socket.on('connect',()=>{\r\n            console.log(\"Connected with \" + data.user.login);\r\n            socket.emit(USER_CONNECTED,data.user.login,this.setUser)\r\n            socket.on(`${MESSAGE_RECIEVED}-${data.user.login}`,(newMessage)=>{\r\n                const oldMessages = this.state.currentChatMessages;\r\n                this.setState({\r\n                    currentChatMessages:[...oldMessages,newMessage]\r\n                })\r\n             \r\n            })\r\n            socket.on(`${MESSAGE_SENT}-${data.user.login}`,(newMessage)=>{\r\n                const oldMessages = this.state.currentChatMessages;  \r\n                this.setState({\r\n                    currentChatMessages:[...oldMessages,newMessage]\r\n                })\r\n              \r\n            })\r\n        })\r\n  \r\n        this.setState({socket})\r\n\r\n    }\r\n\r\n    setPreviousMessages = (chat) =>{  \r\n      \r\n        this.setState({currentChatMessages:chat.messages},()=>{\r\n\r\n        this.addChat({\r\n                chatId:chat.chatId,\r\n                chatName:chat.chatName,\r\n                lastMessage:chat.messages[chat.messages.length-1],\r\n                users:chat.users\r\n            })\r\n        })\r\n    \r\n        \r\n        \r\n       }\r\n    addChat = (chat) =>{\r\n      \r\n        const oldChatHistory = this.state.chatHistory;\r\n        const isPreviousChat = oldChatHistory.filter(({id})=>(chat.id === id))\r\n        if(isPreviousChat.length < 1){\r\n        this.setState({\r\n            chatHistory:[chat,...oldChatHistory],\r\n            activeChat:chat\r\n        });\r\n        }else{\r\n            this.setState({\r\n                activeChat:chat\r\n            });\r\n        }\r\n       \r\n    }\r\n    \r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"dashboard u-display-flex\">\r\n                <div className=\"dashboard__left u-display-flex\">\r\n                       <div className=\"dashboard__sidenav\">\r\n                            <div>\r\n                                <img className=\"profile-pic--lg\" src={this.props.data.user.avatar_url} alt=\"gitforker dp\"/>\r\n                            </div>\r\n                            <ul>\r\n                            <Link to=\"/dashboard\"><li>Chat</li></Link>\r\n                            <Link to=\"/find_forker\"><li>Find Forkers</li></Link>\r\n                            <Link to=\"/find_forker\">  <li>Settings</li></Link>\r\n                            \r\n                            </ul>\r\n                       </div>\r\n        \r\n                       <div className=\"dashboard__list\">\r\n                           <Route path=\"/dashboard\" component={()=><ChatList \r\n                                                                        chatHistory={this.state.chatHistory}\r\n                                                                        user={this.props.data.user.login}\r\n                                                                        />}/>\r\n                           <Route path=\"/find_forker\" component={FindForkerList}/>\r\n                           \r\n                            \r\n                       </div>\r\n                </div>\r\n                <div className=\"dashboard__right\">\r\n                \r\n              \r\n\r\n                    <Route path=\"/dashboard/:user\"  component={()=><PersonalChatContainer \r\n                                                                            setPreviousMessages={this.setPreviousMessages}\r\n                                                                            messages={this.state.currentChatMessages}\r\n                                                                            socket={this.state.socket}\r\n                                                                            user={this.props.data.user.login}\r\n                                                                            reciever={this.props.match.params.user}\r\n                                                                            addChat={this.addChat}\r\n                                                                            chat={this.state.activeChat}\r\n                                                                        />} />\r\n                    <Route path=\"/find_forker/:id\"  component={()=><UserProfile id={this.props.match.params.id}/>}/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React , {Component} from 'react';\r\nimport { graphql, renderToStringWithData } from 'react-apollo';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport gql from 'graphql-tag';\r\nimport Loader from '../Loader';\r\nconst query = gql`\r\nquery{\r\n    user{\r\n      login\r\n      avatar_url\r\n    }\r\n}`\r\n\r\n\r\nexport default (WrappedComponent) =>{\r\n    class requireAuth extends Component{\r\n        componentWillUpdate(nextProps){\r\n            \r\n            if(!nextProps.data.loading && !nextProps.data.user){\r\n                this.props.history.push('/');\r\n            }\r\n            return (nextProps.data.user)\r\n        }\r\n    render(){\r\n        \r\n        return (!this.props.data.loading)?\r\n        <WrappedComponent {...this.props}  />:\r\n        <Loader/>\r\n    }\r\n}\r\nreturn graphql(query)(withRouter(requireAuth));\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom'\nimport './App.css';\nimport IndexPage from './pages/index'\nimport Dashboard from './pages/Dashboard'\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport LoginVerification from './components/HOC/loginVerification'\n\nconst client = new ApolloClient({\n  link: new HttpLink({uri:'http://localhost:4000/graphql'}),\n  cache: new InMemoryCache()\n\n});\n\nclass App extends Component {\n  render() {\n\n    return (\n      <ApolloProvider client={client}>\n        <BrowserRouter>\n         <div className=\"App\">\n              <Route path=\"/\" exact component={IndexPage}/>\n              <Route path=\"/dashboard\" exact component={LoginVerification(Dashboard)}/>\n              <Route path=\"/dashboard/:user\" exact component={LoginVerification(Dashboard)}/>\n              <Route path=\"/find_forker\" exact component={LoginVerification(Dashboard)}/>\n              <Route path=\"/find_forker/:id\" exact component={LoginVerification(Dashboard)}/>\n              \n\n          </div>\n          \n        </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"FORKERS.d90617ab.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}